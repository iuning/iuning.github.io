<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>木叶</title>
  
  <subtitle>极北之地，冰雪覆枝。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://koahe.xyz/"/>
  <updated>2020-05-21T14:39:02.000Z</updated>
  <id>http://koahe.xyz/</id>
  
  <author>
    <name>北枝</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>第三章 数据链路层</title>
    <link href="http://koahe.xyz/2020/05/21/Chapter03/"/>
    <id>http://koahe.xyz/2020/05/21/Chapter03/</id>
    <published>2020-05-21T14:39:02.000Z</published>
    <updated>2020-05-21T14:39:02.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="数据链路层基本概念"><a href="#数据链路层基本概念" class="headerlink" title="数据链路层基本概念"></a>数据链路层基本概念</h2><ul><li>数据链路层提供两个相邻的网络节点之间的可靠通信。</li><li>数据链路层将不可靠的物理链路变为可靠的数据链路。</li><li>数据链路层的主要工作：<ul><li>线路规程：解决了“现在谁该发送”的问题。</li><li>差错控制：通常采用“校验-确认-重发”的模式来纠正错误。</li><li>流量控制：调整在某段时间内可发送的数据量。</li></ul></li><li><strong>数据链路层传输的数据单元是帧(Frame)</strong>。</li></ul><h3 id="线路规划"><a href="#线路规划" class="headerlink" title="线路规划"></a>线路规划</h3><pre><code>是监视链路的建立，以及在给定时刻分配一个具体设备进行数据传输的权利。</code></pre><p>两种方式实现：</p><ul><li>询问/应答(ENQ/ACK)</li><li>轮询(Poll)/选择(Select)方式:ENQ(询问帧)、ACK(确认帧)、NAK(否定应答帧)、EOT(传输结束帧)<br><img src="/2020/05/21/Chapter03/03.png" alt="帧"></li></ul><h3 id="数据链路层的简单模型"><a href="#数据链路层的简单模型" class="headerlink" title="数据链路层的简单模型"></a>数据链路层的简单模型</h3><h4 id="主机H1向主机H2发送数据：（红色从层次上看数据的流动，绿色仅从链路层观察帧流动）"><a href="#主机H1向主机H2发送数据：（红色从层次上看数据的流动，绿色仅从链路层观察帧流动）" class="headerlink" title="主机H1向主机H2发送数据：（红色从层次上看数据的流动，绿色仅从链路层观察帧流动）"></a>主机H1向主机H2发送数据：（红色从层次上看数据的流动，绿色仅从链路层观察帧流动）</h4><p><img src="/2020/05/21/Chapter03/04.png" alt="帧"></p><h4 id="数据链路和帧："><a href="#数据链路和帧：" class="headerlink" title="数据链路和帧："></a>数据链路和帧：</h4><ul><li><strong>链路（link）</strong>：是一条无源的点到点的物理线路段，中间没有其他的交换结点。</li><li><strong>数据链路（data link）</strong>：除物理线路外，还必须有通信协议控制数据传输。将实现这些协议的硬件和软件加到链路上，就成了数据链路。<br><img src="/2020/05/21/Chapter03/05.png" alt="帧"></li></ul><h3 id="功能和服务"><a href="#功能和服务" class="headerlink" title="功能和服务"></a>功能和服务</h3><p>数据链路层使用物理层提供的服务在通信信道上发送和接收比特。他要完成一些功能：</p><ul><li><p>向网络层提供一个定义良好的服务接口。</p></li><li><p>处理传输错误。</p></li><li><p>调节数据流，确保慢速的接收方不会被快速的发送方淹没。<br><img src="/2020/05/21/Chapter03/01.png" alt="帧">  <img src="/2020/05/21/Chapter03/02.png" alt="帧"><br>为实现这些目标，数据链路层从网络层获得数据包，然后把这些数据包<strong>封装成帧</strong>以便传输。每个帧包含一个帧头、一个有效载荷（用于存放数据包）以及一个帧尾。</p></li><li><p><strong>封装成帧</strong>：封装成帧(framing)就是在一段数据的前后分别添加首部和尾部，然后就构成了一个帧。首部和尾部的一个重要作用就是进行<strong>帧定界</strong>。<br><img src="/2020/05/21/Chapter03/06.png" alt="封装成帧"></p></li><li><p><strong>透明传输</strong>：帧定界出现的问题。<br><img src="/2020/05/21/Chapter03/07.png" alt="透明传输"></p><ul><li>发送端的数据链路层在数据中出现控制字符SOH、EOT需在前面插入一个转义字符“ESC”(16进制为1B)</li><li><strong>字节填充/字符填充</strong>：接收端的数据链路层在将数据送往网络层之前删除插入的转义字符。如果转义字符也在数据中，则在其前插入一个转义字符。接收端收到两个转移字符时会删除前一个。<br><img src="/2020/05/21/Chapter03/08.png" alt="字符填充"></li></ul></li><li><p><strong>差错检验</strong></p><ul><li>比特差错：1与0之间的错误变化。</li><li>误码率BER(bit error rate)：在一段时间内，传输错误的比特占所传输比特总数的比率。</li></ul></li></ul><h3 id="基本数据链路层协议"><a href="#基本数据链路层协议" class="headerlink" title="基本数据链路层协议"></a>基本数据链路层协议</h3><p>数据链路层使用的信道两种类型：</p><ul><li>点对点信道：一对一的</li><li>广播信道：一对多的</li></ul><h4 id="点对点协议-PPP-Point-to-Point-Protocol"><a href="#点对点协议-PPP-Point-to-Point-Protocol" class="headerlink" title="点对点协议 PPP(Point-to-Point Protocol)"></a>点对点协议 PPP(Point-to-Point Protocol)</h4><p><img src="/2020/05/21/Chapter03/09.png" alt="PPP"><br>PPP协议不需要纠错、流量控制、序号、多点线路、半双工或单工链路.</p><h5 id="PPP协议有三个组成部分："><a href="#PPP协议有三个组成部分：" class="headerlink" title="PPP协议有三个组成部分："></a>PPP协议有三个组成部分：</h5><ul><li>一个将IP数据报封装到串行链路的方法。</li><li><strong>链路控制协议 LCP</strong></li><li><strong>网络控制协议 NCP</strong></li></ul><h5 id="PPP协议的帧格式"><a href="#PPP协议的帧格式" class="headerlink" title="PPP协议的帧格式"></a>PPP协议的帧格式</h5><ul><li>标志字段 F = 0x7E （符号“0x”表示后面的字符是用十六进制表示。十六进制的 7E 的二进制表示是_01111110_）。</li><li>地址字段 A 只置为 0xFF。地址字段实际上并不起作用。</li><li>控制字段 C 通常置为 0x03。 </li><li>PPP 是面向字节的，所有的 PPP 帧的长度都是整数字节<br><img src="/2020/05/21/Chapter03/10.png" alt="PPP"><br>PPP有一个2个字节的协议字段。</li><li>当协议字段为0x0021时，PPP帧的信息字段就是IP数据报。 - 若为 0xC021, 则信息字段是 PPP 链路控制数据。</li><li>若为 0x8021，则表示这是网络控制数据。</li></ul><h5 id="PPP协议的透明传输问题"><a href="#PPP协议的透明传输问题" class="headerlink" title="PPP协议的透明传输问题"></a>PPP协议的透明传输问题</h5><p>当 PPP 用在同步传输链路时，协议规定采用硬件来完成比特填充（和 HDLC 的做法一样）。</p><ul><li>当 PPP 用在<strong>同步传输</strong>时，使用<strong>零比特填充法</strong>:<ul><li>PPP 协议用在 SONET/SDH 链路时，是使用同步传输（一连串的比特连续传送）。这时 PPP 协议采用零比特填充方法来实现透明传输。<blockquote><p>在发送端，只要发现有 5 个连续 1，则立即填入一个 0。接收端对帧中的比特流进行扫描。每当发现 5 个连续1时，就把这 5 个连续 1 后的一个 0 删除.<br><img src="/2020/05/21/Chapter03/11.png" alt="零比特填充"><br>当 PPP 用在<strong>异步传输</strong>时，使用<strong>字符填充法</strong>。</p></blockquote></li><li>将<strong>信息字段</strong>中出现的每一个 0x7E 字节转变成为 2 字节序列(0x7D, 0x5E)。</li><li>若信息字段中出现一个 0x7D 的字节, 则将其转变成为2 字节序列(0x7D, 0x5D)。 </li><li>若信息字段中出现 ASCII 码的控制字符（即数值小于0x20 的字符），则在该字符前面要加入一个<strong>0x7D</strong>字节，同时将该字符的编码加以改变。</li></ul></li></ul><h5 id="PPP协议的工作状态"><a href="#PPP协议的工作状态" class="headerlink" title="PPP协议的工作状态"></a>PPP协议的工作状态</h5><ul><li>当用户拨号接入 ISP 时，路由器的调制解调器对拨号做出确认，并建立一条物理连接。</li><li>PC 机向路由器发送一系列的 <strong>LCP 分组（封装成多个 PPP帧）。</strong></li><li>这些分组及其响应选择一些 PPP 参数，和进行网络层配置，NCP 给新接入的 PC机分配一个临时的 IP 地址，使 PC 机成为因特网上的一个主机。</li><li>通信完毕时，NCP 释放网络层连接，收回原来分配出去的IP 地址。接着，LCP 释放数据链路层连接。最后释放的是物理层的连接。<br><img src="/2020/05/21/Chapter03/12.png" alt="PPP工作状态"></li></ul><h4 id="数据链路层的两个子层"><a href="#数据链路层的两个子层" class="headerlink" title="数据链路层的两个子层"></a>数据链路层的两个子层</h4><ol><li><strong>逻辑链路控制LLC(Logical Link control)</strong>子层</li><li><strong>媒体接入控制MAC(Medium Access Control)</strong>子层<blockquote><p>与接入到传输媒体有关的内容都放在 MAC子层，而LLC 子层则与传输媒体无关，<em>不管采用何种协议的局域网对LLC 子层来说都是透明的</em><br><img src="/2020/05/21/Chapter03/13.png" alt="PPP子层"><br>很多厂商生产的适配器上就仅装有 MAC 协议而没有 LLC 协议。</p></blockquote></li></ol><h3 id="流量控制与差错控制"><a href="#流量控制与差错控制" class="headerlink" title="流量控制与差错控制"></a>流量控制与差错控制</h3><h4 id="流量控制"><a href="#流量控制" class="headerlink" title="流量控制"></a>流量控制</h4><pre><code>是一组过程，用来告诉发送方在等待接收方的确认信号之前最多可以传送多少数据</code></pre><p>两个要点：</p><ul><li>数据流不能使接受方过载</li><li>接收方对数据进行确认<br>两个方法：</li><li>基于反馈的流量控制</li><li>基于速率的流量控制</li></ul><h4 id="差错控制"><a href="#差错控制" class="headerlink" title="差错控制"></a>差错控制</h4><pre><code>差错控制主要指错误检测和重传方法。</code></pre><p><strong>自动重复请求(ARQ)</strong>： <br>数据帧在传输中出现错误，接收方就返回一个否定应答帧(NAK)，出错的帧就会被发送方重新传送。这个过程叫ARQ。</p><p>流量控制和差错控制是结合在一起实现的，有两种实现流量控制和差错控制的技术：</p><ul><li>停止等待协议</li><li>滑动窗口协议</li></ul><h4 id="差错检测与纠正"><a href="#差错检测与纠正" class="headerlink" title="差错检测与纠正"></a>差错检测与纠正</h4><p>针对错误有两种基本策略：</p><ul><li>加入冗余信息推断出发送数据（纠错码，前向纠错）</li><li>加入冗余信息推断是否发生错误（检错码）</li></ul><p>纠错码的基本概念：<br>将冗余信息加入到待发送的信息中，<em>一帧由m个数据位和r个冗余（校验）位组成</em></p><ul><li>块码：块为单位编码数据的纠错码</li><li>系统码：系统表示信息的编码</li><li>线性码：校验位是数据位的线性函数</li><li>码字：n=m+r</li><li>码率：码字中数据位所占的比例m/n</li><li><strong>海明距离：两个码字中不相同位的个数</strong></li></ul><blockquote><p><strong>检测d个错误需要距离为d+1的编码方案</strong><br>&nbsp;&nbsp;&nbsp;&nbsp;  d个错误不可能将一个合法码字改变成另一个合法码字<br><strong>纠正d个错误需要距离为2d+1的编码方案</strong><br>&nbsp;&nbsp;&nbsp;&nbsp; d个错误结果也还是离原来的码字最近</p></blockquote><h5 id="四种典型纠错码"><a href="#四种典型纠错码" class="headerlink" title="四种典型纠错码"></a>四种典型纠错码</h5><ul><li><strong>海明码</strong><ul><li>基本原理：2的幂次方位是校验位，其余位是数据位。</li><li>校验位计算：使用强制模2加或奇偶校验</li><li><img src="/2020/05/21/Chapter03/1.jpg" alt></li><li>校验方法：计算综合集后，将不正确的位取反</li></ul></li><li><strong>二进制卷积码</strong><ul><li>卷积码将k个信息比特编成n个比特，但k和n通常很小，特别适合以串行形式进行传输，时延小。与块码不同，卷积码编码后的n个码元不仅与当前段的k个信息有关，还与前面的N- 1段信息有关</li></ul></li><li><strong>里德所罗门码</strong><ul><li>基本原理：每个n次多项式是由n+1个点唯一确定的</li><li>RS编码，又称里所码，即Reed-solomon codes，是一种前向纠错的信道编码，对由校正过采样数据所产生的多项式有效。当接收器正确的收到足够的点后，它就可以恢复原来的多项式，即使接收到的多项式上有很多点被噪声干扰失真。</li><li>里德-所罗门码被广泛的应用于各种商业用途，最显著的是在CD、DVD和蓝光光盘上的使用;在数据传输中，它也被用于DSL和WiMAX;广播系统中DVB和ATSC也闪现着它的身影;在电脑科学里，它是第六层标准RAID的重要成员。</li></ul></li><li>低密度奇偶校验码<ul><li>具有稀疏校验矩阵的分组纠错码。几乎适用于所有的信道。</li></ul></li></ul><h5 id="检错码"><a href="#检错码" class="headerlink" title="检错码"></a>检错码</h5><ul><li>奇偶：计算序列中包含一的个数是奇数还是偶数。</li><li>校验和：计算补码，并在校验中使用累加计算。</li><li>循环冗余码(CRC)</li></ul><h3 id="滑动窗口协议"><a href="#滑动窗口协议" class="headerlink" title="滑动窗口协议"></a>滑动窗口协议</h3><h4 id="停止等待协议"><a href="#停止等待协议" class="headerlink" title="停止等待协议"></a>停止等待协议</h4><p>发送方每发送一帧就等待应答。只有收到一个应答(ACK)后才发送下一帧。直到发送方发送一个传输结束帧。<br><img src="/2020/05/21/Chapter03/14.png" alt="停止等待协议"></p><h5 id="时间和利用率"><a href="#时间和利用率" class="headerlink" title="时间和利用率"></a>时间和利用率</h5><p><strong>完成一帧发送所需要的最短时间：</strong><br>WT=t<sub>I</sub>+2t<sub>p</sub>+2t<sub>proc</sub>+t<sub>s</sub></p><ul><li><p>t<sub>I</sub>：发送数据帧的时间=帧长/数据传输率</p></li><li><p>t<sub>s</sub>：发送确认帧时间=确认帧长/数据传输率</p><blockquote><p>无噪声（理论状况）情况下码元速率与信道带宽的关系：<br><strong>H=2*B</strong><br>其中，B是信道带宽；与数据传输率的关系:<br><strong>C=2<em>B</em>log<sub>2</sub>V</strong><br>C是最大数据速率。V表示，信号包含了V个离散等级（题中可能表述为每个码元可能取V个值）。</p></blockquote></li><li><p>t<sub>p</sub>：信号传输延时=距离/0.7光速</p></li><li><p>t<sub>proc</sub>：节点处理数据时间<br><img src="/2020/05/21/Chapter03/15.png" alt="停止等待协议"></p></li><li><p><strong>无差错情况的信道利用率F：</strong><br>  <strong>F=(tI+tp)/WT</strong><br>  tI：发送数据的时间;     tp：信号的传输延时；<br>  信道利用率：信道被占用的时间和总时间之比。</p></li><li><p><strong>无差错情况的有效数据传输率S：</strong><br>  <strong>S=D1/WT</strong><br>  D1是有效数据位数；WT是发送一帧的时间<br>  有效数据传输率：单位时间内传输的有效数据位数</p></li><li><p><strong>有差错时正确传送一帧的平均时间</strong>:<br>  无差错情况下，发送一帧的最小时间间隔为WT,记为tW<br>  当出错率为p时,正确发送一帧的平均时间间隔tV为：<br>  tV=tW/(1-p)</p></li><li><p>系统的最大吞吐量λmax （每秒成功发送的帧数）：<br>  λmax =1/tV=(1-p)/tW</p></li><li><p>极限吞吐量M= 1/ tI</p></li></ul><h5 id="停止等待协议中的差错检验"><a href="#停止等待协议中的差错检验" class="headerlink" title="停止等待协议中的差错检验"></a>停止等待协议中的差错检验</h5><pre><code>ARQ技术：（处理：帧破坏、帧丢失、应答帧丢失）</code></pre><p><img src="/2020/05/21/Chapter03/16.png" alt="停止等待协议中的差错控制"></p><ul><li>停止等待协议中的基本要求：<ul><li>发送站要保留数据帧的备份</li><li>数据帧和应答帧必须交替的标识为0和1.如果接受方收到了两个相邻的数据且标号相同，收到了一个重复帧需要丢失一个。</li><li>否定应答帧(NAK),通知发送方重新发送最近的一帧。</li><li>定时器，判断数据帧在传输中丢失。</li></ul></li></ul><h4 id="滑动窗口协议-1"><a href="#滑动窗口协议-1" class="headerlink" title="滑动窗口协议"></a>滑动窗口协议</h4><h5 id="滑动窗口协议中的流量控制"><a href="#滑动窗口协议中的流量控制" class="headerlink" title="滑动窗口协议中的流量控制"></a>滑动窗口协议中的流量控制</h5><pre><code>窗口是发送方和接受方存放数据帧的缓冲区。类似于一个box。</code></pre><ul><li>发送方在收到应答消息前可以发送若干帧。接收方使用一个ACK帧来对多个数据帧的接收进行确认。具体可以接受多少帧视窗口大小而定</li><li>帧编号：<br> • 在滑动窗口协议中，数据帧以模n方式编号，也就是说，编号从0到n-1。窗口的大小是n-1。<br> • 接收方发送的应答帧(ACK)编号是接收方希望收到的下一帧的编号。</li><li>发送方窗口用于存放已经发送但未收到应答的数据帧和在收到应答帧之前可以发送的数据帧。</li><li>接收方窗口用于存放已经被接收但未给应答的数据帧。只要窗口未填满就可以在未发送应答帧的情况下继续接收数据帧。</li></ul><h5 id="滑动窗口协议中的差错控制"><a href="#滑动窗口协议中的差错控制" class="headerlink" title="滑动窗口协议中的差错控制"></a>滑动窗口协议中的差错控制</h5><pre><code>帧破坏、数据帧丢失、确认帧丢失</code></pre><ul><li>滑动窗口协议中，有两种实现自动重复请求(ARQ)技术: <ul><li>（1）回退N自动重复请求(Go-back-N)：如果一帧丢失或损坏了，从最近一次得到应答的数据帧开始，未被应答的所有帧都进行重传。</li><li>（2）选择拒绝自动重复请求(Select-Rej)</li></ul></li><li>滑动窗口协议中的基本要求：<ul><li>发送站要保留数据帧的备份</li><li>除确认帧外，接收方可以发送否认帧，告诉发送方重新发送</li><li>定时器，判断数据帧在传输中丢失。</li></ul></li></ul><ol><li>帧破坏：<ul><li>回退N：接受方发现数据帧m有错，不接受后面的帧，丢弃发送过来的后面帧，发送NAK<sub>m</sub>,发送方<strong>自数据帧m重发</strong>。</li><li>选择拒绝：发送方已发送到数据帧n，接受方发现数据帧m有错，发送NAK<sub>m</sub>,发送方<strong>重发数据帧m，收到ACK后继n继续发送数据帧。</strong></li></ul></li><li>数据帧丢失：<ul><li>回退N：数据帧m丢失，接收方发送NAK<sub>m</sub>,接受方已经接收到的位于编号m后的帧全部丢弃。发送方将从数据帧m开始重发。</li><li>选择拒绝：发送方已发送到数据帧n，接受方数据帧m丢失，发送NAK<sub>m</sub>,。发送方将数据帧m重发，收到ACK后，继续发送n后的数据帧。</li></ul></li><li>确认帧丢失：<ul><li>回退N：ACK丢失，发送方发现超时，发送方将尚未应答的所有帧都重传一遍。</li><li>选择拒绝：当发送窗口满时，或传输完毕时，启动定时时钟。如果在预定时间段内没有应答到来，发送方将尚未应答的所有帧都重传一遍。这和回退n协议是一样的</li></ul></li><li>窗口大小与编号范围的关系：<ul><li>回退N：在回退N协议中，如果帧的编号范围是0～n-1，<strong>则窗口的尺寸为n-1</strong></li><li>选择拒绝：如果帧的编号范围是0到n-1(即模n编号),<strong>则发送窗口尺寸和接收窗口尺寸之和应小于或等于n</strong>。如果要求发送窗口和接收窗口大小相等，则窗口尺寸应该小于或等于n/2。</li></ul></li></ol><p><img src="/2020/05/21/Chapter03/17.png" alt="差错控制"><br><img src="/2020/05/21/Chapter03/18.png" alt="差错控制"><br><img src="/2020/05/21/Chapter03/19.png" alt="差错控制"><br><img src="/2020/05/21/Chapter03/20.png" alt="差错控制"></p><h5 id="窗口大小选择"><a href="#窗口大小选择" class="headerlink" title="窗口大小选择"></a>窗口大小选择</h5><ul><li>窗口如果选得太大，会要求有足够大的缓存空间；</li><li>如果选得太小，由于传播和发送延迟，第一个应答帧返回到发送方之前，发送方发送窗口中的帧已经全部发送出去，但是没有得到应答，发送方必须等待，从而影响了传输速度和传输效率。</li></ul><ul><li>假设一个帧的发送时间为tI，传播时间为tP，则窗口的大小n应该满足如下条件：<br>  ntI&gt;2(tI+tP) 或：ntI&gt;tI+2tP+ts<blockquote><p>例：在卫星通信中，设帧的长度为1200bit，信道速率为4.8kbit/s，传播延迟为tP=250ms，在全双工的数据通信中，窗口至少应为: tI=1200÷(4.8×1000)=0.25s=250ms所以：n&gt;2×(250+250)÷250，即n&gt;4</p></blockquote></li></ul><h5 id="回退N的效率"><a href="#回退N的效率" class="headerlink" title="回退N的效率"></a>回退N的效率</h5><ul><li><p>正确传送一帧所需的平均时间为：t<sub>v</sub>=t<sub>I</sub>+pt<sub>w</sub>/(1-p)（p为差错率）</p></li><li><p>系统最大吞吐量: λmax=1/ tV=(1-p)/(tI(1+ p(a-1)))</p></li><li><p>系统的传输效率 :ρ=(1-p)/(1+ p(a-1)) (<strong>其中a=tW/tI</strong>)</p></li><li><p>例：若数据帧的差错率为p=0.01,而a=4,则：</p><ul><li>（1）对于停止等待协议，有：ρ=(1-p)/a=0.99/4</li><li>（2）对于滑动窗口协议，则有:ρ=(1-p)/(1+(a-1)p)=0.99/(1+3*0.01)=0.96。</li></ul></li><li><p>例子<br><img src="/2020/05/21/Chapter03/21.png" alt="看例子"></p><h5 id="3种协议方法总结"><a href="#3种协议方法总结" class="headerlink" title="3种协议方法总结"></a>3种协议方法总结</h5></li><li><p>停止等待协议:<br>  发送窗口=1，接收窗口=1;</p></li><li><p>滑动窗口中的回退N:<br>  发送窗口&gt;1，接收窗口=1;</p></li><li><p>滑动窗口中的选择拒绝:<br>  发送窗口&gt;1，接收窗口&gt;1;</p></li></ul><h3 id="HDLC通信协议"><a href="#HDLC通信协议" class="headerlink" title="HDLC通信协议"></a>HDLC通信协议</h3><p><img src="/2020/05/21/Chapter03/22.png" alt><br>HDLC协议为了支持上述配置下的3种通信方式，定义了三种类型的帧：</p><ul><li>信息帧（I-帧）</li><li>监管帧（S-帧）</li><li>无编号帧（U-帧）<br><img src="/2020/05/21/Chapter03/23.png" alt="HDLC"></li></ul><ol><li>标志字段<br> 标志字段为一个字节（8位）,其比特模式为01111110；<br> 表示一个帧的开始和结束，并且为接收方提供同步手段。<ul><li>位填充法（零比特填充法）：发送方发送一个含有五个以上连续1的数据时，它总是在第五个1后面插入一个冗余的0。不管第六个比特是0还是1。接收方接收时作相反的动作(去掉5个1后面的零。  </li><li>字节填充法</li></ul></li><li>地址字段<ul><li>该字段是指从站地址，或者是以从站方式运行的复合站地址。</li><li>如果帧是由主站发送的，则地址表示接收该帧的从站地址。</li><li>如果帧是由从站发送的，则地址表示发送该帧的从站地址。</li><li>根据网络的规模，地址字段可以有1个或几个字节的长度，如果地址字段只有一个字节，该字节最后一比特总是1。如果地址字段有多个字节，除最后一个字节外其他所有字节都要以0结尾，最后一个字节要以1结尾。</li></ul></li><li>控制字段</li></ol><ul><li>控制字段是用来进行流量管理的。根据控制字段的内容，可以知道一个帧的类型。</li><li>如果控制字段的第一个比特是0，该帧就是一个信息帧。</li><li>如果控制字段的前两个比特是10，该帧就是一个监管帧。</li><li>如果控制字段的前两个比特是11，该帧就是一个无编号帧。<br><img src="/2020/05/21/Chapter03/24.png" alt="HDLC控制字段"><blockquote><p>控制字段的第一位为0，它是I帧的标志。<br>第2、3、4位是N(S)位，是当前发送帧的编号。<br>第5位是P/F位，P/F(这里是F)表示是否还有要发送的帧，<br>如果P/F=0,表示还有要发送的帧；如果P/F=1,表示没有要发送的帧，发送结束。（U-帧中一般都为1）<br>CODE:00:接受就绪帧(RR)|01:接受未就绪帧(RNR)|10:拒绝帧(REJ)|11:选择拒绝帧(SREJ)<br>第6、7、8位是N(R)位，N(R)是期望收到的帧编号（U-帧中为CODE）</p></blockquote></li></ul><ol start="4"><li>信息字段</li></ol><ul><li>S-帧中没有信息字段。I-帧的信息字段是用户数据信息。U-帧中的信息字段是链路管理信息。</li><li>把发送信息和控制信息结合到一帧中的技术称为捎带确认。</li></ul><ol start="5"><li>帧校验序列字段</li></ol><ul><li>帧校验序列是HDLC协议的错误检测字段。</li><li>它含有一个两字节或一个四字节的循环冗余校验(CRC)码</li></ul><h4 id="监控帧的使用方式"><a href="#监控帧的使用方式" class="headerlink" title="监控帧的使用方式"></a>监控帧的使用方式</h4><p>S-帧尽管没有信息字段，但是每一帧都给接收方带去了某种信息。这些信息的含义需要通过S-帧的类型和传输上下文来获得。共有四类S-帧: </p><ol><li>接收就绪(RR)帧：</li></ol><ul><li><strong>应答（ACK）</strong>:接收站本身没有数据信息发送时,用一个接收就绪帧作为应答帧来对所接收的数据帧进行应答。(P/F=0)</li><li><strong>查询</strong>：主站点询问从站点是否有数据发送，(P/F=1, POLL）。</li><li><strong>对查询的否定应答</strong>:从站点用一个P/F位置1的RR帧回答主站点的查询,通知主站点从站点没有数据发送。如果从站点有数据发送，从站点用I-帧来响应查询。(POLL.NAK)</li><li><strong>对选择的肯定应答</strong>:如果从站点收到了主站点的选择帧,并且从站点准备好从主站接收数据,它用一个P/F位置1的RR帧回答主站点的选择。(SEL.ACK)</li></ul><ol start="2"><li>接收未就绪(RNR)帧:</li></ol><ul><li>应答(ACK):接收方向发送方返回的RNR帧有两个意思。第一个意思是应答,表示接收方收到了编号在N(R)以前的所有帧。第二个意思是要求发送方暂停发送，直到发送方收到一个RR帧为止。(P/F=0)</li><li>选择:当主站点想要向某个从站点发送数据时,它通过发送一个P/F位置1的RNR帧来通知从站点。(SEL)</li><li>对选择的否定应答:当选择的从设备不能接收数据时,它回答一个P/F置1的RNR帧。(SEL.NAK)</li></ul><ol start="3"><li>拒绝(REJ)帧:</li></ol><ul><li>在回退N自动重复请求中，当接收方没有要发送的数据用来捎带应答信息时，返回的一个否定应答帧。</li><li>在REJ帧中，N(R)域指明了损坏帧的序号。</li><li>损坏帧及其以后所有帧必须重发。</li></ul><ol start="4"><li>选择拒绝(SREJ)帧</li></ol><ul><li>在选择拒绝自动重复请求中，当接收方收到一个损坏帧时，它用一个选择拒绝帧告诉发送方哪一帧被损坏</li><li>N(R)指明了被损坏帧的编号。</li><li>被损坏的帧需要重发</li></ul><h5 id="无编号帧的种类及意义"><a href="#无编号帧的种类及意义" class="headerlink" title="无编号帧的种类及意义"></a>无编号帧的种类及意义</h5><ul><li>无编号帧是用来在互连设备之间交换会话管理信息和控制信息的。  </li><li>无编号帧的控制字段中有5位编码位，这5个编码位可用来表示32种不同类型的无编号帧。<br><img src="/2020/05/21/Chapter03/2.jpg" alt></li></ul><h5 id="HDLC协议通信实例"><a href="#HDLC协议通信实例" class="headerlink" title="HDLC协议通信实例"></a>HDLC协议通信实例</h5><ul><li>查询/响应<br><img src="/2020/05/21/Chapter03/25.png" alt="HDLC"></li><li>选择/应答<br><img src="/2020/05/21/Chapter03/26.png" alt="HDLC"></li></ul><h3 id="数据链路层的网络互连"><a href="#数据链路层的网络互连" class="headerlink" title="数据链路层的网络互连"></a>数据链路层的网络互连</h3><ul><li>网桥是数据链路层上的互连设备。从互连网络的结构上看，网桥属于DCE级的端到端的连接；从协议的层次上看，网桥同时作用在OSI的物理层和数据链路层。</li><li>网桥在数据链路层上进行数据帧的存贮和转发。</li><li>网桥常用于局域网的互连。</li><li>网桥具有隔离通信、错误检测、帧格式转换、帧路由等数据链路层功能。</li></ul><h4 id="网桥路由算法"><a href="#网桥路由算法" class="headerlink" title="网桥路由算法"></a>网桥路由算法</h4><ol><li>固定路由</li></ol><ul><li>每个网桥中都有一张表，这张表中记录了到某个特定站点的帧应该转发到那个哪个局域网中去的信息，这个表称为<strong>路由表</strong>。</li><li>在固定路由网桥中，路由表的生成是由手工配置的，一旦配置完成，路由表不会变动</li><li><img src="/2020/05/21/Chapter03/27.png" alt="HDLC"></li></ul><ol start="2"><li>透明路由</li></ol><ul><li>能够根据网络信息自动生成和修改它们自己的路由表的网桥称为<strong>透明网桥（Transparent Bridge）</strong>。 </li><li>这种自动修改和生成路由表的能力称为<strong>路由学习（Route Learning）或地址学习（Address Learning）</strong> </li><li>⑴路由表的自动修改: <ul><li>当网桥接收到一个帧时，检查帧的源地址。确定发送该帧的站点可以通过这个帧刚到达的局域网来访问。</li><li>之后修改路由表中关于这个站点的信息。</li></ul></li><li>⑵路由表的初始化<ul><li>当一个网桥修改一个路由表的某一项时，它包含了对该项修改的时间。每个网桥同时维持一个定时器，只要定时器到期，网桥就检查路由表的每一项，若从定时器被设置以来，该项一直未被修改，网桥就删除该项。</li><li>当网桥收到一个发往某站点的帧，而在路由表中没有该站点的路由信息时，网桥使用一个扩散算法。</li></ul></li><li>⑶帧循环问题<ul><li>当一个互连局域网有回路时，就可能会产生帧的循环传递问题。</li><li>这种过程继续下去，将导致帧的爆炸，最终会阻塞整个系统，使通信停止。</li></ul></li><li><img src="/2020/05/21/Chapter03/28.png" alt="生成树算法"></li><li>生成树算法（Spanning Tree）  <ul><li>算法规则</li><li>⑴先确定根网桥</li><li>⑵确定每个网桥的根端口（Root Port） </li><li>⑶为每个局域网决定一个指定网桥</li><li>⑷确定路径，确定生成树</li><li>在每个交换机上启动STP协议：[Switch-A]stp enableSTP的全称是spanning-tree protocol,STP协议是一个二层的链路管理协议，是生成树协议。它在提供链路冗余的同时防止网络产生环路。</li></ul></li></ul><ol start="3"><li>源路由网桥</li></ol><ul><li>由发送帧的源站点决定转发路由，而不是由网桥来决定。</li><li>路由存储在帧中, 由<strong>路由指示（Route Designator）序列</strong>组成，每个路由指示由一个局域网和一个网桥ID组成</li><li>当一个网桥看见一个帧时，它就确定是否有一个路由指示，若有，该路由指示包含该网桥的ID和传输该帧的局域网的ID，网桥接收该帧并将它转发到下一个路由指示指定的局域网上。</li><li>例如:假定A发送一个帧给B，并指定一个路由为L1:B5 L3:B4 L4。连接到L1的两个网桥B5和B6都见到了这个帧，但是在路由指示序列中，B5跟随着L1，所以只有B5接收这个帧，然后B5将这个帧转发给L3。</li><li><img src="/2020/05/21/Chapter03/29.png" alt="源路由"></li></ul><h4 id="第二层交换机，及比较"><a href="#第二层交换机，及比较" class="headerlink" title="第二层交换机，及比较"></a>第二层交换机，及比较</h4><p>交换机从某一节点收到一个以太网帧后，立即在其内存中的地址表（端口号－MAC地址）进行查找，以确认该目的MAC的网卡连接在哪一个节点上，然后将该帧转发至该节点 每个端口有自己的带宽，各端口之间并行工作，这就大大提高了网络吞吐量。<br><img src="/2020/05/21/Chapter03/3.jpg" alt><br>比较：</p><ul><li><img src="/2020/05/21/Chapter03/30.png" alt="源路由"><h4 id="两种典型的交换技术"><a href="#两种典型的交换技术" class="headerlink" title="两种典型的交换技术"></a>两种典型的交换技术</h4></li></ul><ol><li><strong>直通式（Cut Through</strong>）<br>直通方式的以太网交换机可以理解为在各端口间是纵横交叉的线路矩阵电话交换机。<br>它在输入端口检测到一个数据包时，检查该包的包头，获取包的目的地址，启动内部的动态查找表转换成相应的输出端口，在输入与输出交叉处接通，把数据包直通到相应的端口，实现交换功能</li><li><strong>存储转发（Store &amp;amp； Forward）</strong><br>存储转发方式是计算机网络领域应用最为广泛的方式。它对输入端口的数据包进行检查，在对错误包处理后才取出数据包的目的地址，通过查找表转换成输出端口送出包。</li></ol><ul><li><p>VLAN的划分</p></li><li><p>VLAN的好处主要有三个： </p><ul><li>端口的分隔。即便在同一个交换机上，处于不同VLAN的端口也是不能通信的。这样一个物理的交换机可以当作多个逻辑的交换机使用。</li><li>网络的安全。不同VLAN不能直接通信，杜绝了广播信息的不安全性。</li><li>灵活的管理。更改用户所属的网络不必换端口和连线，只更改软件配置就可以了。</li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3></li><li><p>数据链路层的任务是将物理层提供的原始比特流转换成由冋络层使用的帧流.链路层为这样的帧流提供不同程度的可靠性，范围从无连接无确认的服务到可靠的面向连接服务不等.</p></li><li><p>链路层采用的成帧方法各种各样，包括字节计数、字节填充和比特填充。</p></li><li><p>数据链路协议提供了差借控制机制来检测或纠正传输受损的帧，以及重新传输丢失的帧。</p></li><li><p>为了防止快速发送方淹没慢速接收方，数据链路协议还提供了流量控制机制。滑动窗口机制被广泛用来以一种简单方式集成差错控制和流量控制两大机制。当窗口大小为1个数据包时，则协议是停-等式的。</p></li><li><p>纠错和检错码：卷积码和里德所罗门码、低密度校验码广泛用于纠错。检错码包括循环冗余码和检验和。可用于物理层和更高层。</p></li><li><p>ARQ(自动重复请求)机制为上层提供了一个可靠的链路层。停等协议是个特殊的滑动窗口协议，完成双向通信。回退n协议和选择重传协议用于检验，确保信息准确传输。</p></li><li><p>Internet使用PPP作为点到点线路上的主要数据链路协议。PPP协议提供了无连接的无确认服务，使用标志字节区分帧的边界，至于错误检测则采用CRC。该协议通常被用在运载数据包的一系列链路上，包括广域网中的SONET链路和家庭ADSL链路。</p></li><li><p>习题大佬资源：<a href="https://blog.csdn.net/ao__ao/article/details/85197480" target="_blank" rel="noopener">csdn</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      网络模型第二层即数据链路层。涉及**封装成帧、透明传输、差错检验**、数据链路层基本协议、海明距离、海明码、停止等待协议、滑动窗口协议······。
    
    </summary>
    
    
      <category term="计算机网络" scheme="http://koahe.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="差错检验和纠正" scheme="http://koahe.xyz/tags/%E5%B7%AE%E9%94%99%E6%A3%80%E9%AA%8C%E5%92%8C%E7%BA%A0%E6%AD%A3/"/>
    
      <category term="停止等待协议" scheme="http://koahe.xyz/tags/%E5%81%9C%E6%AD%A2%E7%AD%89%E5%BE%85%E5%8D%8F%E8%AE%AE/"/>
    
      <category term="滑动窗口协议" scheme="http://koahe.xyz/tags/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E5%8D%8F%E8%AE%AE/"/>
    
      <category term="回退N协议" scheme="http://koahe.xyz/tags/%E5%9B%9E%E9%80%80N%E5%8D%8F%E8%AE%AE/"/>
    
      <category term="选择重传协议" scheme="http://koahe.xyz/tags/%E9%80%89%E6%8B%A9%E9%87%8D%E4%BC%A0%E5%8D%8F%E8%AE%AE/"/>
    
  </entry>
  
  <entry>
    <title>第二章 物理层</title>
    <link href="http://koahe.xyz/2020/05/08/Chapter02/"/>
    <id>http://koahe.xyz/2020/05/08/Chapter02/</id>
    <published>2020-05-07T16:00:00.000Z</published>
    <updated>2020-05-07T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="物理层的基本概念"><a href="#物理层的基本概念" class="headerlink" title="物理层的基本概念"></a>物理层的基本概念</h2><ul><li>是OSI的第一层，是整个开放系统的基础。为设备之间的数据通信提供传输媒体和互联设备，为数据传输提供可靠的环境。<strong>屏蔽物理层所采用的传输介质、通信设备与通信技术的差异性</strong>，使数据链路层只需考虑如何使用物理层的服务。<br><img src="/2020/05/08/Chapter02/02.png" alt="传输演示"><blockquote><ol><li>为数据端设备提供传送数据的<strong>通路</strong>。</li><li>传输数据。形成适合数据传输所需的实体，为数据传送服务。</li><li>完成物理层的管理工作</li><li>数据传输单位是比特（bit）</li></ol></blockquote></li><li>物理层的主要任务描述为确定与传输媒体的接口的一些特性：<ul><li>机械特性</li><li>电气特性</li><li>功能特性</li><li>过程特性</li></ul></li></ul><h2 id="数据通信的理论基础"><a href="#数据通信的理论基础" class="headerlink" title="数据通信的理论基础"></a>数据通信的理论基础</h2><h3 id="数据通信系统"><a href="#数据通信系统" class="headerlink" title="数据通信系统"></a>数据通信系统</h3><p>计算机网络是计算机技术和数据通信技术相结合的产物，其中数据通信系统的组成包括：</p><ul><li><strong>信    源</strong>：产生要发送数据的设备。</li><li><strong>发送设备</strong>：对数据进行编码的设备。</li><li><strong>传输系统</strong>：传输线路或网络。</li><li><strong>接收设备</strong>：讲接受的信号变成数据。</li><li><strong>信    宿</strong>：目的系统。<br><img src="/2020/05/08/Chapter02/03.png" alt="数据通信系统"><br><img src="/2020/05/08/Chapter02/04.png" alt="数通"></li></ul><h3 id="模拟信号"><a href="#模拟信号" class="headerlink" title="模拟信号"></a>模拟信号</h3><h4 id="简单模拟信号"><a href="#简单模拟信号" class="headerlink" title="简单模拟信号"></a>简单模拟信号</h4><p>正弦波信号：<br><img src="/2020/05/08/Chapter02/05.png" alt="简模"></p><h4 id="复杂模拟信号"><a href="#复杂模拟信号" class="headerlink" title="复杂模拟信号"></a>复杂模拟信号</h4><p>可分解为多个正弦波叠加：<br><img src="/2020/05/08/Chapter02/06.png" alt="数通"></p><h4 id="傅里叶分析"><a href="#傅里叶分析" class="headerlink" title="傅里叶分析"></a>傅里叶分析</h4><p>傅里叶证明了：任何一个行为合理周期为T的函数g(t),都可以表示成用正弦函数和余弦函数表示的无穷级数。任何一个模拟数据信号都可以通过<strong>多次谐波</strong>（多个正弦或余弦波的叠加）表示出来。</p><blockquote><p><img src="/2020/05/08/Chapter02/01.png" alt="无穷级数"></p></blockquote><h4 id="基带和通带信号"><a href="#基带和通带信号" class="headerlink" title="基带和通带信号"></a>基带和通带信号</h4><ul><li>_基带信号_（基本频带信号）：来自信源的信号。计算机输出的代表各种文字或图像文件的数据信号都属于。</li><li>_通带信号_：把基带信号经过载波调制后，把信号频率搬移到较高的频段以便于在信道中传输（即仅在一段频率范围内能够通过信道）。</li><li>基本的二元制调制方法：<ul><li><strong>调幅</strong>（AM）：载波的振幅随基带<strong>数字信号</strong>而变化。</li><li><strong>调频</strong>（FM）：载波的频率随基带<strong>数字信号</strong>而变化。</li><li><strong>调相</strong>（PM）：载波的初始相位随基带数字信号而变化。</li><li><img src="/2020/05/08/Chapter02/07.png" alt="dalal"></li></ul></li></ul><h3 id="数字信号"><a href="#数字信号" class="headerlink" title="数字信号"></a>数字信号</h3><pre><code>离散的、值的变化是瞬时发生的信号。</code></pre><p><img src="/2020/05/08/Chapter02/08.png" alt="数字信号"></p><ul><li><strong>比特间隙</strong>：发送一比特所用时间。</li><li><strong>比特率</strong>：每秒钟发送的比特数。单位是bps。</li><li><strong>有效带宽</strong>：数字信号是由多个频率信号的叠加而成，如果只传输有重要振幅分量的频率信号，而输出端能以合理的精度恢复信号，则这个上限频率就是有效带宽。</li><li><strong>介质带宽</strong>：传输介质只能传输某些频率范围内的信号。</li><li><strong>信道容量</strong>：传输介质可以传输的最大比特率，依赖编码技术。</li></ul><h4 id="信道的极限容量"><a href="#信道的极限容量" class="headerlink" title="信道的极限容量"></a>信道的极限容量</h4><p>任何实际的信道都不是理想的，在传输信号时会发生各种失真以激发i来多种干扰。<br>传输的速率越高，或信号传输的距离越远，在信道输出端的波形的失真越严重。<br><img src="/2020/05/08/Chapter02/09.png" alt="信道失真"></p><h4 id="尼奎斯特准则"><a href="#尼奎斯特准则" class="headerlink" title="尼奎斯特准则"></a>尼奎斯特准则</h4><p>无噪声（理论状况）情况下码元速率与信道带宽的关系：     </p><blockquote><p><strong>H=2*B</strong><br>其中，B是信道带宽；与数据传输率的关系:<br><strong>C=2<em>B</em>log<sub>2</sub>V</strong><br>C是最大数据速率。V表示，信号包含了V个离散等级（题中可能表述为每个码元可能取V个值）。</p></blockquote><h4 id="香农定理"><a href="#香农定理" class="headerlink" title="香农定理"></a>香农定理</h4><p>对于一条带宽为B Hz、噪声比是S/N的有噪声信道，其最大数据速率或者容量为：</p><blockquote><p>最大比特率=B log<sub>2</sub>(1+S/N)<br>S表示信号功率，N表示噪声功率。为适用于很大的范围，<strong>信噪比表示成对数形式 10log<sub>10</sub>S/N,对数的取值单位为分贝（dB）。</strong>10的信噪比为10分贝，100的信噪比为20分贝。</p></blockquote><h3 id="（引导性和非引导性）传输介质"><a href="#（引导性和非引导性）传输介质" class="headerlink" title="（引导性和非引导性）传输介质"></a>（引导性和非引导性）传输介质</h3><ul><li>有线介质：<ul><li>双绞线：</li><li><img src="/2020/05/08/Chapter02/10.png" alt="双绞线"><ul><li>568A: 绿白绿橙白蓝，蓝白橙棕白棕</li><li>568B: 橙白橙绿白蓝，蓝白绿棕白棕</li></ul></li><li>同轴电缆：50Ω、70Ω</li><li>光纤：纤芯、包层、保护层。不断地全反射。多模近失真，单模长好贵。</li><li>······</li></ul></li><li>无线介质：<ul><li>卫星</li><li>微波</li><li>红外线</li><li>······</li></ul><ul><li>长波：传播衰减快，但是可以绕射；短波、微波：传播衰减慢，但是需要通视。</li><li>对于有限的频谱来说，通信容易产生干扰<ul><li>跳频扩频</li><li>直接序列扩频</li><li>超宽带扩频</li></ul></li></ul></li></ul><h2 id="数字调制与多路复用"><a href="#数字调制与多路复用" class="headerlink" title="数字调制与多路复用"></a>数字调制与多路复用</h2><pre><code>数字调制：比特与代表它们的信号之间的转换过程称为**数字调制**。信息用信号表示。</code></pre><ul><li>数字比特如何直接转换成信号的一些方案，导致了所谓的<strong>基带传输</strong>，即信号的传输占有传输介质上从0到最大值之间的全部频率，而最大频率则取决于信令速率。</li><li>信道被多个信号共享的形式称为多路复用技术。<h3 id="信息-gt-信号编码调制方式"><a href="#信息-gt-信号编码调制方式" class="headerlink" title="信息-&gt;信号编码调制方式"></a>信息-&gt;信号编码调制方式</h3><h4 id="数字信息-gt-数字信号调制"><a href="#数字信息-gt-数字信号调制" class="headerlink" title="数字信息-&gt;数字信号调制"></a>数字信息-&gt;数字信号调制</h4></li></ul><ol><li>单极化编码<br> 电压是单极性。高电平表示1，低表示0.缺点：有直流电平，带宽要求高，无法同步（需依赖附加线）</li><li>极化编码<br> 一正一负，减轻了单极性编码中的直流分量问题<ul><li>非归零编码（NRZ）：可用光的存在表示1，不存在表示0.简单不常用。需要B/2的带宽。</li><li>归零编码（RZ）：码元中间的信号回归到0电平,判断的方法是”从正电平到零电平的转换边表示的码元为0,而从负电平到零电平转换边表示码元1”,使得这种编码为自定时的编码。<ul><li>单极性归零码即是以高电平和零电平分别表示二进制码1 和0，而且在发送码1 时高电平在整个码元期间T 只持续一段时间τ，其余时间返回零电平。</li><li>双极性归零码是二进制码0 和1 分别对应于正和负电平的波形的编码，在每个码之间都有间隙产生。</li></ul></li><li>双相位码：双相位编码中，信号在每比特间隙的中间发生改变但并不归零，而是转为相反的一极。各比特中间的跳变可用于同步。<ul><li>曼切斯特编码：在每个比特间隙中间引入跳变来表示不同的比特和同步信息。负到正代表比特1，正到负表示0.需要两倍于NRZ编码的带宽。</li><li>差分曼切斯特编码：比特间隙中间的跳变用于携带同步信息。<strong>每个比特间隙的开始位置</strong>有跳变表示0，没有为1.</li></ul></li></ul></li></ol><h4 id="数字信息-gt-模拟信号调制"><a href="#数字信息-gt-模拟信号调制" class="headerlink" title="数字信息-&gt;模拟信号调制"></a>数字信息-&gt;模拟信号调制</h4><blockquote><ol><li><strong>比特率S</strong>：每秒所发送的比特数。单位：bit/s(bps)</li><li><strong>波特率B</strong>：每秒发送的信号单元数。单位：波特（baud）</li><li><strong>载波信号</strong>：发送设备产生一个高频信号作为基波来承载信息信号。基波极为载波信号。此过程为调制。</li></ol></blockquote><ul><li><strong>幅移键控（ASK）</strong>：不同幅度表示0和1.抗干扰较差。</li><li><strong>频移键控（FSK）</strong>：两个或更多个不同的频率表示0、1，抗干扰比ASK好。</li><li><strong>相位键控（PSK）</strong>：不同相位表示0、1.最简单的形式为。<ul><li>在每个符号的周期中，把载波便宜0度或180度，此法也称为二进制相移键控（BPSK）。</li><li>有效地利用信道带宽的一个更好方案是使用4个偏移，例如45°、135°、225°或315°，这样每个符号可传输2个比特信息。这个版本的调制方式称为<strong>正交相移鍵控</strong>(QPSK. Quadrature Phase Shift Keying)。</li><li>PSK可以用更多的状态表示二进制位，是调制的主要技术。</li></ul></li><li><strong>正交调幅（QAM）</strong>：ASK和PSK结合起来的编码方法。<br>  <img src="/2020/05/08/Chapter02/11.png" alt="QAM"><ul><li>上图中，b共有16种组合，每个符号传输4比特（0000）；c有64种组合，每个符号传输6比特（000000）。</li></ul></li></ul><blockquote><ul><li>波特率与比特率的关系为：</li><li>S = B×log<sub>2</sub>N （ N：码元状态数）</li><li>例如：</li><li>两相调制(单个调制状态对应1个二进制位)的比特率等于波特率；</li><li>四相调制(单个调制状态对应2个二进制位)的比特率为波特率的两倍；</li><li>八相调制(单个调制状态对应3个二进制位)的比特率为波特率的三倍.</li></ul></blockquote><h4 id="模拟信息-gt-数字信号调制（信号采样）"><a href="#模拟信息-gt-数字信号调制（信号采样）" class="headerlink" title="模拟信息-&gt;数字信号调制（信号采样）"></a>模拟信息-&gt;数字信号调制（信号采样）</h4><ul><li>A/D数据采集，主要应用自动控制系统</li><li>需要3个步骤:<ul><li>①采样：将连续的模拟信号离散化</li><li>②量化：离散的采样值用2进制位数量化</li><li>③编码：对量化后的数据用2进制编码</li></ul></li><li>采样定理（Shannon)：采样频率大于信号最高频率的2倍。</li></ul><h4 id="模拟信息-gt-模拟信号调制（信号采样）"><a href="#模拟信息-gt-模拟信号调制（信号采样）" class="headerlink" title="模拟信息-&gt;模拟信号调制（信号采样）"></a>模拟信息-&gt;模拟信号调制（信号采样）</h4><ul><li>有线电视，电话系统等</li><li>声音信号的频率范围：20HZ - 20KHZ</li><li>视频信号主要能量集中在300HZ - 3000HZ 之间</li></ul><h3 id="线路配置"><a href="#线路配置" class="headerlink" title="线路配置"></a>线路配置</h3><p>指两个或两个以上的设备连接到线路的方式。 有两种线路配置方式： 点到点连接和多点连接</p><ul><li>传输模式：指比特流从一个设备传到另一个设备的方式。<ul><li>单工，半双工，全双工</li><li>串行传输，并行传输</li><li>同步传输，异步传输</li></ul></li></ul><h3 id="多路复用"><a href="#多路复用" class="headerlink" title="多路复用"></a>多路复用</h3><pre><code>静态划分信道</code></pre><h4 id="时分多路复用"><a href="#时分多路复用" class="headerlink" title="时分多路复用"></a>时分多路复用</h4><p>将时间划分为一段段的等长的时分复用帧。</p><ul><li>同步时分多路复用<br><img src="/2020/05/08/Chapter02/12.png" alt="FDM"></li><li>异步时分多路复用<br><img src="/2020/05/08/Chapter02/14.png" alt="FDM"></li><li>对比同步时分多路复用和异步时分多路复用<ol><li>同步时分多路复用的帧是固定大小的，控制简单，实时性好。</li><li>信道效率差。</li><li>异步时分多路复用能提高系统的利用率，异步时分多路复用</li><li>需要一些额外的代价：<br>  ①信息单元需附带地址信息<br>  ②复用器必须有一定的存储容量<br>  ③节点必须有管理队列的能力</li></ol></li></ul><h4 id="波分多路复用"><a href="#波分多路复用" class="headerlink" title="波分多路复用"></a>波分多路复用</h4><p>利用多个激光器在单条光纤上同时发送多束不同波长激光的技术。它在一定的带宽上将输入的光信号调制到特定的频率上，然后将调制后的信号复用到一根光纤上。<br><img src="/2020/05/08/Chapter02/13.png" alt="WDM"></p><h4 id="码分多路复用CDMA"><a href="#码分多路复用CDMA" class="headerlink" title="码分多路复用CDMA"></a><strong>码分多路复用CDMA</strong></h4><p>通常称为码分多址，根据码型结构的不同来实现信号分割的多路复用。用户通过码型来区分。使用同一频率占用相同的带宽。使用特殊挑选的不同码型，彼此不会造成干扰。</p><blockquote><ul><li>每一个比特时间划分为 m 个短的间隔，称为<strong>码片(chip)</strong>。</li><li>每个站被指派一个唯一的 m bit 码片序列。<strong>各不相同且互相正交</strong></li><li>如发送比特 1，则发送自己的 m bit 码片序列。</li><li>如发送比特 0，则发送该码片序列的二进制反码。</li><li>码分多路复用CDMA (Code-Division Multiple Access)：<br> 任何一个码片向量和该码片向量自己的规格化内积都是1 。<br> 一个码片向量和该码片反码的向量的规格化内积值是 –1.<br> <img src="/2020/05/08/Chapter02/15.png" alt="CDMA"><ul><li>接受方必须预先知道特定站的码片序列，计算收到的码片序列与该站的码片序列的归一化（规格化）内积，就可以恢复出该站的比特流。如果收到的码片序列为S，接收方正在监听的那个站的码片序列为C,则该站的比特流为S·C（逐个分量求乘积结果累加除以m。<br><img src="/2020/05/08/Chapter02/16.png" alt="CDMA"><br><img src="/2020/05/08/Chapter02/17.png" alt="CDMA"></li></ul></li></ul></blockquote><h3 id="数字传输系统"><a href="#数字传输系统" class="headerlink" title="数字传输系统"></a>数字传输系统</h3><p>物理层的网络设备有：中继器和集线器。</p><ul><li>使用中继器连接网络，要求所连接的局域网具有相同的物理层和媒体访问控制协议，中继器重新产生信号，因此就可以扩展局域网所覆盖的地理范围。</li><li>集线器就是有多个分路的中继器（或简易中继器）</li><li>脉码调制 PCM 体制：最初是为了在电话局之间的中继线上传送多路的电话。由于历史上的原因，PCM 有两个互不兼容的国际标准，即北美的 24 路 PCM（简称为 T1）和欧洲的30 路 PCM（简称为 E1）。我国采用的是欧洲的 E1 标准。E1 的速率是 2.048 Mb/s，而 T1 的速率是 1.544 Mb/s。当需要有更高的数据率时，可采用复用的方法。</li><li>旧的数字传输系统存在两方面的主要缺陷：<ul><li>速率标准不统一：如果不对高次群的数字传输速率进行标准化，国际范围的高速数据传输就很难实现。</li><li>不是同步传输：在过去相当长的时间，为了节约经费，各国的数字网主要是采用准同步方式。</li></ul></li><li>同步光纤网SONET：同步光纤网 SONET (Synchronous Optical Network) 的各级时钟都来自一个非常精确的主时钟。第1级同步传送信号 STS-1 (Synchronous Transport Signal)的传输速率是 51.84 Mb/s。光信号则称为第1级光载波OC-1，OC表示Optical Carrier。<br><img src="/2020/05/08/Chapter02/19.png" alt="SONET"></li><li>同步数字系列SDH：一般可认为 SDH 与 SONET 是同义词。SDH 的基本速率为 155.52 Mb/s，称为第 1 级同步传递模块 (Synchronous Transfer Module)，即 STM-1，相当于SONET 体系中的 OC-3 速率。</li><li><img src="/2020/05/08/Chapter02/18.png" alt="sonetsdh"></li></ul><h3 id="宽带接入技术"><a href="#宽带接入技术" class="headerlink" title="宽带接入技术"></a>宽带接入技术</h3><ul><li><p>xDSL技术是用数字技术对现有的模拟电话用户线进行改造，使它能够承载宽带数字业务。技术就把 0~4 kHz 低端频谱留给传统电话使用，而把原来没有被利用的高端频谱留给用户上网使用。</p></li><li><p>x的几种类型：</p><ul><li>ADSL (Asymmetric Digital Subscriber Line)：非对称数字用户线</li><li>HDSL (High speed DSL)：高速数字用户线</li><li>SDSL (Single-line DSL)：1 对线的数字用户线</li><li>VDSL (Very high speed DSL)：甚高速数字用户线</li><li>DSL ：ISDN 用户线。</li><li>RADSL (Rate-Adaptive DSL)：速率自适应 DSL，是 ADSL 的一个子集，可自动调节线路速率）</li></ul></li><li><p>ADSL 的特点：<br>  上行和下行带宽做成不对称的。<br>  上行指从用户到 ISP，而下行指从 ISP 到用户。<br>  ADSL 在用户线的两端各安装一个 ADSL 调制解调器。<br>  我国目前采用的方案是离散多音调 DMT (Discrete MultiTone)调制技术。这里的“多音调”就是“多载波”或“多子信道”的意思</p></li><li><p>第二代 ADSL：ADSL2（G.992.3/4）和ADSL2+（G.992.5）通过提高调制效率得到了更高的数据率。采用了无缝速率自适应技术 SRA (Seamless Rate Adaptation)，可在运营中不中断通信和不产生误码的情况下，自适应地调整数据率。改善了线路质量评测和故障定位功能，这对提高网络的运行维护水平具有非常重要的意义</p></li><li><p>DMT 调制技术采用频分复用的方法，把 40 kHz 以上一直到1.1 MHz 的高端频谱划分为许多的子信道，其中 25 个子信道用于上行信道，而 249 个子信道用于下行信道。每个子信道占据 4 kHz 带宽（严格讲是 4.3125 kHz），并使用不同的载波（即不同的音调）进行数字调制。这种做法相当于在一对用户线上使用许多小的调制解调器并行地传送数据。</p></li><li><p>光纤同轴混合网HFC (Hybrid Fiber Coax)：<br>  HFC 网是在目前覆盖面很广的有线电视网 CATV 的基础上开发的一种居民宽带接入网。主干线路采用光纤，使用模拟光纤技术。在模拟光纤中采用光的振幅调制 AM，这比使用数字光纤更为经济。<br>  模拟光纤从头端连接到光纤结点(fiber node)，即光分配结点 ODN (Optical Distribution Node)。在光纤结点光信号被转换为电信号。在光纤结点以下就是同轴电缆<br>  HFC 网除可传送 CATV 外，还提供电话、数据和其他宽带交互型业务。<br>  现有的 CATV 网是树形拓扑结构的同轴电缆网络，它采用模拟技术的频分复用对电视节目进行单向传输。而 HFC 网则需要对 CATV 网进行改造。</p><ul><li><strong>电缆调制解调器</strong>是为 HFC 网而使用的调制解调器。电缆调制解调器最大的特点就是传输速率高。其下行速率一般在 3 10 Mb/s之间，最高可达 30 Mb/s，而上行速率一般为 0.2 2 Mb/s，最高可达 10 Mb/s。电缆调制解调器比在普通电话线上使用的调制解调器要复杂得多，并且不是成对使用，而是只安装在用户端。</li><li>用户接口盒 UIB (User Interface Box)要提供三种连接，即：<ul><li>使用同轴电缆连接到机顶盒(set-top box)，然后再连接到用户的电视机。</li><li>使用双绞线连接到用户的电话机。</li><li>使用电缆调制解调器连接到用户的计算机。</li></ul></li></ul></li><li><p>FTTx技术<br>光纤到家、大楼、路边。</p></li></ul><h3 id="移动接入技术"><a href="#移动接入技术" class="headerlink" title="移动接入技术"></a>移动接入技术</h3><ul><li>移动电话（蜂窝电话）系统<ul><li>1G及2G网络最主要的分别是1G使用类比调制，而2G则是数字调制。由于调制方式的区别，1G网络只能传输模拟语音，而2G网络（GSM）已经具备传输数字信息的能力。</li><li>3G网络（数字语音和数据），是指支持高速数据传输的蜂窝移动通讯技术。3G服务能够同时传送声音（通话）及数据信息（电子邮件、即时通信等）。四标准：CDMA2000，WCDMA，TD-SCDMA，WiMAX。</li><li>4G网络：4G是第四代通讯技术的简称，4G系统能够以100Mbps的速度下载，上传的速度也能达到20Mbps，并能够满足几乎所有用户对于无线服务的要求。<blockquote><p>2012.1.20 ITU正式审议通过的的4G（IMT-Advanced ）标准：LTE-Advanced：LTE(Long Term Evolution,长期演进)的后续研究标准；WirelessMAN-Advanced(802.16m)：WiMAX的后续研究标准。而TD-LTE作为LTE-Advanced标准分支之一入选；这是由我国主要提出的.<br>LTE(Long Term Evolution,长期演进)项目是3G的演进，它改进并增强了3G的空中接入技术，采用正交频分复用OFDM和多入多出MIMO作为其无线网络演进的唯一标准。</p></blockquote></li><li>5G网络<br>标志性能力指标为“Gbps用户体验速率”，一组关键技术包括_大规模天线阵列、超密集组网、新型多址、全频谱接入和新型网络架构_等。大规模天线阵列是提升系统频谱效率的最重要技术手段之一，对满足5G系统容量和速率需求将起到重要的支撑作用；超密集组网通过增加基站部署密度，可实现百倍量级的容量提升，是满足5G千倍容量增长需求的最主要手段之一；新型多址技术通过发送信号的叠加传输来提升系统的接入能力，可有效支撑5G网络千亿设备连接需求；全频谱接入技术通过有效利用各类频谱资源，可有效缓解5G网络对频谱资源的巨大需求；新型网络架构基于SDN、NFV和云计算等先进技术可实现以用户为中心的更灵活、智能、高效和开放的5G新型网络</li></ul></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>物理层是所有网络的基础。</li><li>传输介质可以是引导性的或非引导性的。</li><li>数字调制方式可以通过引导性和非引导性介质上的模拟信号来发送比特。</li><li>大多数广域网络的关键元素是电话系统。</li><li>中继线传送数字信息。</li><li>第一代1G是模拟的，由AMP主宰。第二代2G是数字化，目前在全球部署最广泛的移动电话系统是GSMo第三代3是数字的并且以宽带CDMA为基础，部署的有WCDMA和CDMA2000。</li><li>另一种网络接入系统是有线电视系统。它己逐渐从同轴电缆演变为混合光纤同轴电缆,从单纯的电视演进为电视和Internet。它的潜在带宽很高，但实际带宽则主要取决于其他户，因为它是共享式的。</li><li>习题大佬资源：<a href="https://blog.csdn.net/ao__ao/article/details/84938492" target="_blank" rel="noopener"></a></li></ul>]]></content>
    
    <summary type="html">
    
      计算机网络物理层的整理与复习。其中重点为码分多址，香农、尼奎斯特定理。
    
    </summary>
    
    
      <category term="计算机网络" scheme="http://koahe.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="尼奎斯特定理" scheme="http://koahe.xyz/tags/%E5%B0%BC%E5%A5%8E%E6%96%AF%E7%89%B9%E5%AE%9A%E7%90%86/"/>
    
      <category term="香农定理" scheme="http://koahe.xyz/tags/%E9%A6%99%E5%86%9C%E5%AE%9A%E7%90%86/"/>
    
      <category term="频分复用（FDM）" scheme="http://koahe.xyz/tags/%E9%A2%91%E5%88%86%E5%A4%8D%E7%94%A8%EF%BC%88FDM%EF%BC%89/"/>
    
      <category term="时分复用（TDM）" scheme="http://koahe.xyz/tags/%E6%97%B6%E5%88%86%E5%A4%8D%E7%94%A8%EF%BC%88TDM%EF%BC%89/"/>
    
      <category term="码分多址（CDMA）" scheme="http://koahe.xyz/tags/%E7%A0%81%E5%88%86%E5%A4%9A%E5%9D%80%EF%BC%88CDMA%EF%BC%89/"/>
    
  </entry>
  
  <entry>
    <title>第一章 引言</title>
    <link href="http://koahe.xyz/2020/05/01/Chapter01/"/>
    <id>http://koahe.xyz/2020/05/01/Chapter01/</id>
    <published>2020-04-30T16:00:00.000Z</published>
    <updated>2020-04-30T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><ol><li>虚拟专用网（VPN，Virtual Private Networks）：将不同地点的单个网络联结成一个拓展的网络。试图终结“地理位置的束缚”。</li><li>客户机-服务器模型：客户机——网络——服务器。是许多网络应用的基础，实现之一：Web应用</li><li>对等通信（peer to peer）：原则上，每个人都可与一个或多个其他人通信，客户端和服务器没具体分工。</li><li>RFC(Request For Comments)：请求注释。英特网草案、建议标准、草案标准、因特网标准</li><li>ISO（International Standards Organization）：国际标准化组织。后面会有一个OSI模型。</li><li>路由算法：网络如何决定使用哪条路径的策略。</li><li>转发算法：每个路由器如何决定把一个数据包发送到哪个位置的策略。</li><li>一组相互连接的网络称为<strong>互联网络（interbetwork）</strong>或<strong>互联网（internet）</strong>。首字母大写为<strong>因特网（Internet）</strong>（这是一种特殊的互联网络），使用ISP网络连接各种各样的网络。</li><li>以太网的两个标准<br>- <strong>DIX Ethernet V2</strong> 是世界上第一个局域网产品（以太网）<br>的规约。<br>- IEEE 的 802.3 标准。<blockquote><p>DIX Ethernet V2 标准与 IEEE 的 802.3 标准只有很小的差别，因此<strong>可以将 802.3 局域网简称为“以太网”。</strong><br>严格说来，“以太网”应当是指符合 DIX Ethernet V2 标准的局域网</p></blockquote></li><li>网络接口板又称为通信适配器(adapter)或网络接口卡NIC(Network Interface Card)，或“网卡”。<br>主要功能：<ul><li>进行串行/并行转换。</li><li>对数据进行缓存。 </li><li>在计算机的操作系统安装设备驱动程序。</li><li>实现以太网协议。<blockquote><p>计算机通过适配器和局域网进行通信<br><img src="/2020/05/01/Chapter01/A5.png" alt="adapter"></p></blockquote></li></ul></li></ol><h2 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h2><ul><li>定义：大量相互独立但彼此连接的计算机共同完成计算任务。</li><li>如果两台计算机能够相互交换信息，则称两台计算机是相互连接的。网络可以有不同的大小、形状和形式。这些网络通常连接在一起组成更大的网络，<strong>Internet就是著名的网络中的网络。</strong></li><li>IP（Internet协议）/TCP（传输控制协议）协议的核心技术的公开最终导致了Internet的大发展。</li><li>度量单位: B表示字节（bytes）（8比特），b表示bit。<ul><li>KB、MB、GB、TB:2^10、2^20、2^30、2^40字节</li><li>kbps、Mbps、Gbps、Tbps：10^3、10^6、10^9、10^12位/秒</li></ul></li></ul><h3 id="性能指标"><a href="#性能指标" class="headerlink" title="性能指标"></a>性能指标</h3><ol><li><strong>速率</strong><ul><li>速率：数据率(data rate)或比特率(bit rate)是计算机网络中最重要的一个性能指标。速率的单位是b/s, kb/s,Mb/s, Gb/s 等。</li><li>速率往往是指额定屏或滿速率。</li><li>波特率：每秒钟通过信道的码元数称为码元传输速率，简称波特率。</li><li>比特率和波辟之间的换算关系如下：<br>  比特率=波特率* log<sub>2</sub>n</li></ul></li><li><strong>带宽</strong><ul><li>“带宽”(bandwidth)本来指信号具有的频带宽度，单位是赫(或千赫、兆赫、吉赫等)。</li><li>现在”带宽“是数字信道所能传送的,最高数据率的同义语，单位是“比特每秒”，或b/s (bit/s)。<br><img src="/2020/05/01/Chapter01/A1.png" alt="带宽"></li></ul></li><li><strong>吞吐量</strong><ul><li>吞吐量(throughput)表示在单位时间内通过某个网络(或信道、接口)的数据量。</li><li>吞吐量更经常地用于对现实世界中的网络的一种测量,以便知道实际上到底有多少数据量能够通过网络。</li><li>吞吐量受网络的带宽或网络的额定速率的限制。</li></ul></li><li><strong>时延（delay或latency）</strong><ul><li>_传输时延（发送时延）_：发送数据时，数据块从结点进入传输媒体所需要的时间。<br><img src="/2020/05/01/Chapter01/A2.png" alt="发送时延"></li><li>_传播时延_：电磁波在信道中需要传播一定的距离而花费的时间。<br><img src="/2020/05/01/Chapter01/A3.png" alt="传播时延"></li><li>_处理时延_：交换结点为存储转发而进行一些必要的处理所花费的时间。</li><li>_排队时延_：结点缓存队列中分组排队所经历的时延。</li><li>_总时延_：数据经历的总时延就是发送时延、传播时延、处理时延和排队时延之和。</li><li>__</li><li>总时延 = 发送时延+传播时延+处理时延+处理时延__</li></ul></li><li>利用率<ul><li>信道利用率：：指出某信道有百分之几的时间是被利用的（有数据通过）。除去全部控制信息后的数据率与信道吞吐量之比；或发送数据的时间和信道被占用时间之比；完全空闲的信道的利用率是零。</li><li>网络利用率：是全网络的信道利用率的加权平均值。</li></ul></li><li>时延与网络利用率的关系<ul><li>根据排队论的理论，当某信道的利用率增大时，该信道引起的时延也就迅速增加。</li><li>若令 D0 表示网络空闲时的时延，D 表示网络当前的时延，则在适当的假定条件下，可以用下面的简单公式表示 D 和 D<sub>0</sub>之间的关系：D=D<sub>0</sub>/(1-U).     U 是网络的利用率，数值在 0 到 1 之间。<br><img src="/2020/05/01/Chapter01/A4.png" alt="关系"></li></ul></li><li><strong>码元</strong>：在数字通信中常常用时间间隔相同的符号来表示一个二进制数字，这样的时间间隔内的信号称为(二进制）码元。而这个间隔被称为码元长度。值得注意的是当码元的离散状态有大于2个时（如M大于2个）时，此时码元为M进制码元。（百度百科）<ul><li>假如基带信号是101011000110111010…..，如果直接发送，则每个码元携带一个比特的信息（每个码元只有2种状态），但是如果将信号中的三个比特编为一组，即101，011，000，110，111，010……，三个比特共有8种不同的排列，我们可以用不同的调制方法来表示这种信号，如8种不同的振幅，频率，相位等，如果采用相位调制，相位ϕ0表示000，ϕ1表示001，以此类推，那么接收端如果收到相位是ϕ0的信号就知道表示的是000.</li><li>（每个码元有8种状态，每一个码元可表示的比特数越多，则在接收端进行解调时要正确识别每一种状态就越困难）</li><li>总结：码元通俗的说就是信号,就是一个包裹，里面装有信息？</li></ul></li></ol><h3 id="三级结构"><a href="#三级结构" class="headerlink" title="三级结构"></a>三级结构</h3><blockquote><p>以主机为中心—&gt;以分组交换网为中心<br><img src="/2020/05/01/Chapter01/05.png" alt="三级结构"></p></blockquote><ul><li>广域网</li><li>城域网</li><li>局域网</li></ul><h3 id="多层次结构"><a href="#多层次结构" class="headerlink" title="多层次结构"></a>多层次结构</h3><p><img src="/2020/05/01/Chapter01/02.png" alt="多层次结构"><br><img src="/2020/05/01/Chapter01/01.png" alt="A与B通信"><br><img src="/2020/05/01/Chapter01/03.png" alt="多层次结构"></p><ul><li><strong>通信子网：（内层）</strong>主要由通信设备和通信线路机器软件组成；负责全网的数据传输、加工和变换等通信处理操作。</li><li><strong>资源子网：（外层）</strong>主要由主机、终端、附属设备及软件组成；负责全网数据处理和向网络用户提供资源及网络服务。</li></ul><h3 id="以网络互连为中心Internet"><a href="#以网络互连为中心Internet" class="headerlink" title="以网络互连为中心Internet"></a>以网络互连为中心Internet</h3><p><img src="/2020/05/01/Chapter01/04.png" alt="网络互连"></p><h3 id="计算机网络与分布式系统"><a href="#计算机网络与分布式系统" class="headerlink" title="计算机网络与分布式系统"></a>计算机网络与分布式系统</h3><pre><code>两者的关键差别：</code></pre><ul><li>由一组独立的计算机组成的分布式系统呈现给用户的是一个关联的系统。一般来说，在用户看来，分布式系统只是一个模型或泛型。通常在操作系统上有一层<strong>软件（称为中间件）</strong>负责实现这个模型。最著名的分布式系统例子是<strong>万维网（World Wide Web）</strong>，万维网运行在Internet上，所有的一切表现得像个文档（web页面）</li><li>在计算机网络中，机器有不同的硬件或不同的操作系统，这些差异用户是可见的。在远程运行程序必须登录远程。</li><li>实际上，<strong>分布式系统是建立在网络之上的软件系统</strong>，因此，网络与分布式系统之间的区别在于软件（特别是操作系统），而不是硬件。</li></ul><h3 id="局域网（-LAN，Local-Area-Network）"><a href="#局域网（-LAN，Local-Area-Network）" class="headerlink" title="局域网（    LAN，Local Area Network）"></a>局域网（    LAN，Local Area Network）</h3><ul><li>接入点（AP，Access Point）、无线路由器（wireless router）：负责中继无限计算机之间的数据包，还负责中继无限计算机和Internet之间的数据包。</li><li>无线局域网：一个标准：IEEE 802.11 俗称WIFI.</li><li>有线局域网：大多使用铜线作为传输介质，也有光纤。<ul><li><strong>以太网</strong>（Ethernet）：<strong>IEEE 802.3</strong></li><li>交换式以太网：<strong>交换机</strong>的<strong>端口</strong>连接计算机，中继与之连接的计算机之间的数据包，根据其中的地址确定发送方。</li></ul></li><li>虚拟局域网（VLAN,Virtual Local Area Network）</li></ul><h3 id="城域网（MAN-Metropolitan-Area-Network）"><a href="#城域网（MAN-Metropolitan-Area-Network）" class="headerlink" title="城域网（MAN,Metropolitan Area Network）"></a>城域网（MAN,Metropolitan Area Network）</h3><ul><li>典型：有线电视网</li><li><strong>WiMAX</strong>，标准化为 <strong>IEEE 802.16</strong></li></ul><h3 id="广域网（WAN-Wide-Area-Network）"><a href="#广域网（WAN-Wide-Area-Network）" class="headerlink" title="广域网（WAN, Wide Area Network）"></a>广域网（WAN, Wide Area Network）</h3><p>处理用户程序的计算机称为<strong>主机（host）</strong>，主机的网络其余部分称为<strong>通信子网（communication subnet）</strong>简称<strong>子网</strong>。子网把信息从一个主机携带到另一个主机。</p><ul><li><p>子网组成：传输线路和交换元素。<strong>传输线路</strong>负责在机器间移动比特，可以使铜线、光纤、无线链路。<strong>交换元素</strong>即<strong>交换机（switch）</strong>是专用的计算机，负责连接两条或两条以上的传输路线。负责交换的计算机现在常被成为<strong>路由器（router）</strong></p></li><li><p><strong>两种不同类型的广域网</strong></p><ol><li>不使用专用的传输线路，直接将主机连接到Internet。此为：<strong>虚拟专用网（VPN，virtual private network）</strong>。<br><img src="/2020/05/01/Chapter01/06.png" alt="某公司VPN"></li><li>第二种的子网由不同的公司负责运营（网络服务提供商nsp）。主机是他的客户。与其他的网络中用户通信要求子网运营商与Internet的其他网络连接。这样的子网运营商称为<strong>Internet服务提供商（ISP）</strong>,相应的子网称为<strong>ISP网络</strong><blockquote><p>“子网”，通常在广域网的上下文才有意义，它指网络运营商所拥有的一组路由器和通信线路。<br><img src="/2020/05/01/Chapter01/07.png" alt="ISP"></p></blockquote></li></ol></li></ul><h3 id="广域网和局域网的区别"><a href="#广域网和局域网的区别" class="headerlink" title="广域网和局域网的区别"></a>广域网和局域网的区别</h3><p>广域网看起来类似一个大型的有线局域网。实际上有很大差别</p><ol><li>广域网的主机和子网通常由不同的人拥有和经营。通常子网由网络供应商或者电话公司负责经营。</li><li>路由器通常连接不同类型的网络技术。公司内部网络可能是以太网，而长途传输线路可能是SONET链路，需要一个设备将他们结合在一起，这便超出了网络的定义。这意味着许多广域网实际上是<strong>互联网络（internetwork）</strong>，或者符合网络，及由多个网络组成的网络。</li><li>最后一个差异在于子网连接什么。</li></ol><h2 id="网络硬件"><a href="#网络硬件" class="headerlink" title="网络硬件"></a>网络硬件</h2><ul><li>点到点（point to point）传输，只有一个发送方和一个接收方，也被称为<strong>单播</strong>。</li><li><strong>广播</strong>：在一个广播网络上，通信信道被网络上所有的机器共享：任何一台机器发出的数据包能被所有其他的机器收到。有些广播支持给一组机器发送数据包，称为组播。<h3 id="协议层次结构"><a href="#协议层次结构" class="headerlink" title="协议层次结构"></a>协议层次结构</h3></li><li>为降低网络设计的复杂度，绝大多数网络都组织成一个<strong>层次栈（a stack of layer）</strong>或<strong>分级栈（a stack of level）</strong>，每一层都建立在其下面一层的基础上。</li><li>一台机器上的第n层与另一台主机上的第n层通话中使用的规则和约定统称为第n层协议。所谓<strong>协议（protocol）</strong>是指通信双方就如何进行通信的一种约定。</li><li>不同机器上构成相应层次的实体称为<strong>对等体（peer）</strong>，可以使软件过程、硬件设备甚至是人类。</li><li>第一层给下面是<strong>物理介质</strong>，通过他进行实际的通信。</li><li>在每一对相邻层次之间的是<strong>接口</strong>。其定义了下层向上层提供哪些原语操作和服务。</li><li>层和协议的集合称为网络体系结构（network architecture）。</li><li>一个特定的系统所使用的一组协议，即每一层一个协议，称为协议栈（protocol stack）<br><img src="/2020/05/01/Chapter01/08.png" alt="层次、协议和接口"></li><li>在许多网络中，对于第四层上传递的消息大小没有任何限制，但是几乎所有第三层协议对此总会强加一个限制。因此，第三层必须把入境消息分割成较小的单元，及<strong>数据包or包</strong>。</li></ul><h3 id="面向连接与无连接服务"><a href="#面向连接与无连接服务" class="headerlink" title="面向连接与无连接服务"></a>面向连接与无连接服务</h3><ul><li>面向连接的服务是按照电话系统建模的。必须先建立一个连接，然后使用该连接传输数据，最后释放连接。</li><li>无连接服务是按照邮政系统建模的。每个报文（信件）都携带了完整的目标地址，每个报文都由系统中的中间节点路由，而且路由独立于后续报文。处理方式有<strong>储存-转发交换</strong>、<strong>直通式交换</strong>。一个完整时向下一个传输，一个未完整便传输。<ul><li>请求应答服务：发送方传输一个包含请求的数据报，接收方以一个包含请求结果的应答数据包作为反馈。<br><img src="/2020/05/01/Chapter01/09.png" alt="六种服务"><h3 id="服务原语"><a href="#服务原语" class="headerlink" title="服务原语"></a>服务原语</h3>一个服务有一组原语正式说明，用户进程通过这些原语（操作）来访问该服务。<br><img src="/2020/05/01/Chapter01/10.png" alt="服务原语"></li></ul></li></ul><h3 id="服务和协议的关系"><a href="#服务和协议的关系" class="headerlink" title="服务和协议的关系"></a>服务和协议的关系</h3><p><strong>服务</strong>是指某一曾向他的上一层提供一组原语（操作）。服务定义了该层准备代表用户执行哪些操作，但并不涉及如何实现这些操作。服务涉及层与层之间的接口。底层为服务提供者，上层是服务用户。</p><p><strong>协议</strong>是一组规则，规定了同一层上对等实体之间所交换的数据包或者报文的格式和含义。对等实体利用协议来实现他们的服务定义，可自由的该改变协议，只要不改变呈现给用户的服务即可。</p><h2 id="参考模型"><a href="#参考模型" class="headerlink" title="参考模型"></a>参考模型</h2><h3 id="OSI参考模型"><a href="#OSI参考模型" class="headerlink" title="OSI参考模型"></a>OSI参考模型</h3><p><img src="/2020/05/01/Chapter01/11.png" alt="OSI"></p><blockquote><p>由低到高：</p></blockquote><ul><li><strong><em>物理层</em></strong>：关注在一条通信信道上纯属原始比特。</li><li><strong><em>数据链路层</em></strong>：将一个原始的传输设施变成一条没有楼间传输错误的线路。将真实的错误掩盖起来。使得网络层看不到。发送方将输入的数据拆分成<strong>数据帧</strong>，然后顺序发送。如果服务可靠，接收方必须确认正确收到的每一帧，给发送方返回一个<strong>确认帧</strong>。</li><li><strong><em>网络层</em></strong>：控制子网的运行。关键的设计问题是如何将数据包从原端路由到接收方。</li><li><strong><em>传输层</em></strong>：接收来自上一层的数据，必要时将这些数据分割成小单元，传递给网络层，斌确保这些单元正确的到达另一端。还决定了向会话层，因而是实际的最终网络用户提供哪种类型的服务。传输层是真正的端到端的层，他自始至终将数据从源端携带到接收方。</li><li><strong><em>会话层</em></strong>：语序不同机器上的用户建立会话。通常提供各种服务，包括<strong>对话控制</strong>（记录该由谁来传递数据）、<strong>令牌管理</strong>（禁止双方同时执行同一个关键操作）以及<strong>同步功能</strong>（在一个长传输过程中设置一些断点，一边在系统崩溃之后还能恢复到崩溃前的状态继续运行）。</li><li><strong><em>表示层</em></strong>：关注所传的信息的语法和语义。不同的计算机可能有不同的内部数据表示法，为了让他们能够通信，所交换的数据结构必须以一种抽象的方式来定义。</li><li><strong><em>应用层</em></strong>：包含了用户通常需要的各种各样的协议。广发的应用协议：<strong>超文本传输协议（HTTP）</strong>，是万维网（WWW）的基础。<h3 id="TCP-IP参考模型"><a href="#TCP-IP参考模型" class="headerlink" title="TCP/IP参考模型"></a>TCP/IP参考模型</h3><blockquote><p>由低到高：</p></blockquote></li><li>链路层</li><li>互联网层</li><li>传输层：<br>两个传输协议：<ol><li>传输控制协议（TCP），可靠、面向连接。</li><li>用户数据包协议（UDP)，不可靠、无连接。</li></ol></li><li>应用层<br><img src="/2020/05/01/Chapter01/12.png" alt="TCP/IP模型"></li></ul><h3 id="混合模型"><a href="#混合模型" class="headerlink" title="混合模型"></a>混合模型</h3><ul><li>5 应用层</li><li>4 传输层</li><li>3 网络层：</li><li>2 数据链路岑层</li><li>1 物理层<br><img src="/2020/05/01/Chapter01/13.png" alt="混合模型"></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li><p>粗略的讲，网络可分为<strong>LAN（局）、MAN（城）、WAN（广）和互联网络</strong>。</p></li><li><p>网络软件由网络协议祖成，而协议是进程通信必须遵守的规则。大多数网络支持协议的层次结构，每一层向它的上公层提供服务，同时屏蔽掉较低层使用的协议细节。</p></li><li><p>协议栈通常基于OSI模型或者TCP/IP模型。这两个模型都有数据链路层、网络层、传输层和应用层，但它们在其他层不同。</p></li><li><p>设计问题包括可靠性、资源分配、规模增长、信息安全等。</p></li><li><p>网络为它们的用户提供不同的服务。服务的范围从无连接的尽力而为数据包传递服务到面向连接的有质量保证服务。在某些网络中，无连接服务由某一层提供，而面向连接的服务则由它上面的层提供。</p></li><li><p>著名的网络包括_Internet、3G移动电话网络和802.11无线LAN_。<strong>Internet。__</strong>ARPANET__演变而来，那时其他网络纷纷加入到ARPANET中，从而构成了一个互联网。现在的Internet实际上是成千上万个都采用TCP/IP协议栈的网络集合。</p></li><li><p><em>3G移动电话网络</em> 为无线并且移动的用户提供了多个Mbps量级的Internet接入服务，当然也能承载语音通信。</p></li><li><p><em>无线LAN</em> 基于<strong>IEEE802.11</strong>标准，大多数都部署在家庭和咖啡馆，这种网络提供了速超过100Mbps的连通性.</p></li><li><p>_嵌入式传感器网络和基于RFID技术的网络_。</p></li><li><p>为了使多台计算机可相互之间通信，需要大量的标准化工作，不管是硬件方面还是软件方面。诸如ITU-T、ISO、IEEE和IAB这样的组织负责管理标准化进程的各个不同部分。</p></li></ul>]]></content>
    
    <summary type="html">
    
      计算机网络引言部分的整理与复习。
    
    </summary>
    
    
      <category term="计算机网络" scheme="http://koahe.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="带宽" scheme="http://koahe.xyz/tags/%E5%B8%A6%E5%AE%BD/"/>
    
      <category term="信道" scheme="http://koahe.xyz/tags/%E4%BF%A1%E9%81%93/"/>
    
      <category term="码元" scheme="http://koahe.xyz/tags/%E7%A0%81%E5%85%83/"/>
    
      <category term="ISO" scheme="http://koahe.xyz/tags/ISO/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://koahe.xyz/2020/04/18/hello-world/"/>
    <id>http://koahe.xyz/2020/04/18/hello-world/</id>
    <published>2020-04-18T13:00:01.147Z</published>
    <updated>2020-04-18T13:00:01.147Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      OVER
    
    </summary>
    
    
    
  </entry>
  
</feed>
